[gd_scene load_steps=4 format=3 uid="uid://deju5e7gik6gr"]

[ext_resource type="Script" path="res://scenes/game_board/game.gd" id="1_41cbx"]
[ext_resource type="PackedScene" uid="uid://dxu64ad742ahl" path="res://scenes/game_board/board.tscn" id="1_sxlji"]

[sub_resource type="GDScript" id="GDScript_vopb0"]
script/source = "extends Camera2D

# Called when the node enters the scene tree for the first time.
func _ready() -> void:
	pass # Replace with function body.

# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(delta: float) -> void:
	if target and target_return_enabled and events.size() == 0:
		position = position.lerp(get_node(target).position, target_return_rate)

@export var target: NodePath
@export var start_zoom: float = 1.0
@export var max_zoom: float = 4.0
@export var min_zoom: float = 0.5
@export var zoom_speed: float = 0.9
@export var zoom_sensitivity: float = 10.0
@export var pan_speed: float = 50.0
@export var target_return_enabled: bool = true
@export var target_return_rate: float = 0.02

var events = {}
var last_drag_distance = 0.0

func _unhandled_input(event: InputEvent) -> void:
	if event is InputEventScreenTouch:
		if event.pressed:
			events[event.index] = event
		else:
			events.erase(event.index)

	elif event is InputEventScreenDrag:
		events[event.index] = event
		if events.size() == 1:
			position += event.relative.rotated(rotation) * zoom.x
		elif events.size() == 2:
			var drag_distance = events[0].position.distance_to(events[1].position)
			if abs(drag_distance - last_drag_distance) > zoom_sensitivity:
				var new_zoom = (1 + zoom_speed) if drag_distance < last_drag_distance else (1 - zoom_speed)
				new_zoom = clamp(zoom.x * new_zoom, min_zoom, max_zoom)
				zoom = Vector2(new_zoom, new_zoom)
				last_drag_distance = drag_distance
"

[node name="Game" type="Node2D"]
script = ExtResource("1_41cbx")

[node name="Board" parent="." instance=ExtResource("1_sxlji")]
unique_name_in_owner = true
grid_width = 40
grid_height = 10

[node name="Camera" type="Camera2D" parent="."]
unique_name_in_owner = true
position_smoothing_enabled = true
position_smoothing_speed = 10.0
script = SubResource("GDScript_vopb0")
target_return_enabled = false

[node name="UI" type="CanvasLayer" parent="."]

[node name="HBoxContainer" type="HBoxContainer" parent="UI"]
anchors_preset = 10
anchor_right = 1.0
offset_bottom = 23.0
grow_horizontal = 2

[node name="Label" type="Label" parent="UI/HBoxContainer"]
layout_mode = 2
text = "TIMER OR SOMETHING"

[node name="HSeparator" type="HSeparator" parent="UI/HBoxContainer"]
layout_mode = 2
size_flags_horizontal = 3

[node name="Label2" type="Label" parent="UI/HBoxContainer"]
layout_mode = 2
text = "PAUSE OR SOMETHING"
